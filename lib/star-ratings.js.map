{"version":3,"sources":["../src/star-ratings.js"],"names":["StarRatings","highestStarHovered","Infinity","starRating","setState","color","stopColorStyle","stopColor","stopOpacity","props","ignoreInlineStyles","starRatedColor","starEmptyColor","titleText","starRatingsStyle","starGradientStyle","fillId","offsetValue","renderStars","position","boxSizing","display","zIndex","width","height","visibility","typeOfWidget","selectedRating","rating","hoveredRating","state","currentRating","fixedRating","toFixed","formattedRating","parseFloat","toString","Number","isInteger","String","starText","ratingIsInteger","guardedRating","firstTwoDecimalsArr","Math","trunc","split","length","round","name","changeRating","numberOfStars","starDimension","starSpacing","starHoverColor","gradientPathName","svgIconPath","svgIconViewBox","numberOfStarsArray","Array","apply","map","_","index","isStarred","hoverMode","isHovered","isCurrentHoveredStar","isPartiallyFullStar","isFirstStar","isLastStar","hoverOverStar","unHoverOverStar","React","Component","propTypes","PropTypes","number","isRequired","func","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Star from \"./star\";\n\nclass StarRatings extends React.Component {\n  state = {\n    highestStarHovered: -Infinity,\n  };\n\n  get starRatingsStyle() {\n    const starRatingsStyle = {\n      position: \"relative\",\n      boxSizing: \"border-box\",\n      display: \"inline-block\",\n    };\n    return this.props.ignoreInlineStyles ? {} : starRatingsStyle;\n  }\n\n  get starGradientStyle() {\n    const starGradientStyle = {\n      position: \"absolute\",\n      zIndex: \"0\",\n      width: \"0\",\n      height: \"0\",\n      visibility: \"hidden\",\n    };\n    return this.props.ignoreInlineStyles ? {} : starGradientStyle;\n  }\n\n  stopColorStyle(color) {\n    const stopColorStyle = {\n      stopColor: color,\n      stopOpacity: \"1\",\n    };\n    return this.props.ignoreInlineStyles ? {} : stopColorStyle;\n  }\n\n  get titleText() {\n    const { typeOfWidget, rating: selectedRating } = this.props;\n    const hoveredRating = this.state.highestStarHovered;\n    const currentRating = hoveredRating > 0 ? hoveredRating : selectedRating;\n    // fix it at 2 decimal places and remove trailing 0s\n\n    const fixedRating = currentRating ? currentRating.toFixed(2) : 0;\n    let formattedRating = parseFloat(fixedRating).toString();\n    if (Number.isInteger(currentRating)) {\n      formattedRating = String(currentRating);\n    }\n    let starText = `${typeOfWidget}s`;\n    if (formattedRating === \"1\") {\n      starText = typeOfWidget;\n    }\n    return `${formattedRating} ${starText}`;\n  }\n\n  get offsetValue() {\n    const rating = this.props.rating;\n    const ratingIsInteger = Number.isInteger(rating);\n    let offsetValue = \"0%\";\n    if (!ratingIsInteger) {\n      const guardedRating = rating ? rating : 0;\n\n      // This is utter and complete nonsense because Javascript doesn't know how to handle factorials or\n      // really just numbers in general. A simple solution could be a N % 1 but that'll give us a remainder\n      // in the trillionth place. There's also N - Math.floor(N), guess what, same result.\n      const firstTwoDecimalsArr = (Math.trunc(guardedRating * 100) / 100)\n        .toFixed(2)\n        .split(\".\");\n\n      // This should always be two, but, check\n      if (firstTwoDecimalsArr.length > 1) {\n        offsetValue = `${firstTwoDecimalsArr[1]}%`;\n      }\n    }\n\n    return offsetValue;\n  }\n\n  get fillId() {\n    // Using the rating's decimal place to set a unique id for the fill. e.g. a rating of 3.5 and 4.5 will use the same half fill star with id #star-grad-5.\n    return `star-grad-${Math.round((this.props.rating % 1) * 10)}${\n      this.props.name ? `-${this.props.name}` : \"\"\n    }`;\n  }\n\n  hoverOverStar = (starRating) => {\n    return () => {\n      this.setState({\n        highestStarHovered: starRating,\n      });\n    };\n  };\n\n  unHoverOverStar = () => {\n    this.setState({\n      highestStarHovered: -Infinity,\n    });\n  };\n\n  get renderStars() {\n    const {\n      changeRating,\n      rating: selectedRating,\n      numberOfStars,\n      starDimension,\n      starSpacing,\n      starRatedColor,\n      starEmptyColor,\n      starHoverColor,\n      gradientPathName,\n      ignoreInlineStyles,\n      svgIconPath,\n      svgIconViewBox,\n      name,\n    } = this.props;\n    const { highestStarHovered } = this.state;\n\n    const numberOfStarsArray = Array.apply(null, Array(numberOfStars));\n\n    return numberOfStarsArray.map((_, index) => {\n      const starRating = index + 1;\n      const isStarred = starRating <= selectedRating;\n\n      // hovered only matters when changeRating is true\n      const hoverMode = highestStarHovered > 0;\n      const isHovered = starRating <= highestStarHovered;\n      const isCurrentHoveredStar = starRating === highestStarHovered;\n\n      // only matters when changeRating is false\n      // given star 5 and rating 4.2:  5 > 4.2 && 4 < 4.2;\n      const isPartiallyFullStar =\n        starRating > selectedRating && starRating - 1 < selectedRating;\n\n      const isFirstStar = starRating === 1;\n      const isLastStar = starRating === numberOfStars;\n\n      return (\n        <Star\n          key={starRating}\n          fillId={this.fillId}\n          changeRating={\n            changeRating ? () => changeRating(starRating, name) : null\n          }\n          hoverOverStar={changeRating ? this.hoverOverStar(starRating) : null}\n          unHoverOverStar={changeRating ? this.unHoverOverStar : null}\n          isStarred={isStarred}\n          isPartiallyFullStar={isPartiallyFullStar}\n          isHovered={isHovered}\n          hoverMode={hoverMode}\n          isCurrentHoveredStar={isCurrentHoveredStar}\n          isFirstStar={isFirstStar}\n          isLastStar={isLastStar}\n          starDimension={starDimension}\n          starSpacing={starSpacing}\n          starHoverColor={starHoverColor}\n          starRatedColor={starRatedColor}\n          starEmptyColor={starEmptyColor}\n          gradientPathName={gradientPathName}\n          ignoreInlineStyles={ignoreInlineStyles}\n          svgIconPath={svgIconPath}\n          svgIconViewBox={svgIconViewBox}\n        />\n      );\n    });\n  }\n\n  render() {\n    const { starRatedColor, starEmptyColor } = this.props;\n\n    return (\n      <div\n        className=\"star-ratings\"\n        title={this.titleText}\n        style={this.starRatingsStyle}\n      >\n        <svg className=\"star-grad\" style={this.starGradientStyle}>\n          <defs>\n            <linearGradient id={this.fillId} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n              <stop\n                offset=\"0%\"\n                className=\"stop-color-first\"\n                style={this.stopColorStyle(starRatedColor)}\n              />\n              <stop\n                offset={this.offsetValue}\n                className=\"stop-color-first\"\n                style={this.stopColorStyle(starRatedColor)}\n              />\n              <stop\n                offset={this.offsetValue}\n                className=\"stop-color-final\"\n                style={this.stopColorStyle(starEmptyColor)}\n              />\n              <stop\n                offset=\"100%\"\n                className=\"stop-color-final\"\n                style={this.stopColorStyle(starEmptyColor)}\n              />\n            </linearGradient>\n          </defs>\n        </svg>\n        {this.renderStars}\n      </div>\n    );\n  }\n}\n\nStarRatings.propTypes = {\n  rating: PropTypes.number.isRequired,\n  numberOfStars: PropTypes.number.isRequired,\n  changeRating: PropTypes.func,\n  starHoverColor: PropTypes.string.isRequired,\n  starRatedColor: PropTypes.string.isRequired,\n  starEmptyColor: PropTypes.string.isRequired,\n  starDimension: PropTypes.string.isRequired,\n  starSpacing: PropTypes.string.isRequired,\n  gradientPathName: PropTypes.string.isRequired,\n  ignoreInlineStyles: PropTypes.bool.isRequired,\n  svgIconPath: PropTypes.string.isRequired,\n  svgIconViewBox: PropTypes.string.isRequired,\n  name: PropTypes.string,\n};\n\nStarRatings.defaultProps = {\n  rating: 0,\n  typeOfWidget: \"Star\",\n  numberOfStars: 5,\n  changeRating: null,\n  starHoverColor: \"rgb(230, 67, 47)\",\n  starRatedColor: \"rgb(109, 122, 130)\",\n  starEmptyColor: \"rgb(203, 211, 227)\",\n  starDimension: \"50px\",\n  starSpacing: \"7px\",\n  gradientPathName: \"\",\n  ignoreInlineStyles: false,\n  svgIconPath: \"m25,1 6,17h18l-14,11 5,17-15-10-15,10 5-17-14-11h18z\",\n  svgIconViewBox: \"0 0 51 48\",\n};\n\nexport default StarRatings;\n"],"file":"star-ratings.js"}